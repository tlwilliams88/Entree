<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Configuration" #> 
<#@ assembly name="$(ProjectDir)$(OutDir)CommerceServerContrib.CodeGeneration.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Runtime.Remoting.Messaging" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text.RegularExpressions" #> 
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="CommerceServerContrib.CodeGeneration" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//	CommerceServerContrib.CodeGeneration
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace <#= CallContext.LogicalGetData("NamespaceHint") #>.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using CommerceServer.Foundation;
	using System.CodeDom.Compiler;
	using System.Diagnostics;

<#
	PushIndent("\t");
	string channel = string.Empty;
	string userLocal="en-US";
	string userUILocale = "en-US";
	// Swapping the current directory so 2-tier Commerce Server will work.
	Environment.CurrentDirectory = Path.GetDirectoryName(BuildConfigFilePath());
	AppDomain.CurrentDomain.SetData("APPBASE", Path.GetDirectoryName(BuildConfigFilePath()));
	
	var entityGenerator = new EntityGenerator(BuildConfigFilePath(), channel, userLocal, userUILocale);
	foreach(var entity in entityGenerator.GetClassDefinitions())
	{
		CallContext.LogicalSetData("classDefinition", entity);
		string output = ProcessTemplate("CommerceEntityTemplate.tt");
		Write(output);
		CallContext.FreeNamedDataSlot("classDefinition");
    }
#>
}
<#@ include file="..\TemplateGenerationCommon\CodeGenerationIncludes.tt" #>



