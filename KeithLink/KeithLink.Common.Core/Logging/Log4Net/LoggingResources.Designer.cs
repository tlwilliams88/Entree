//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KeithLink.Common.Core.Logging.Log4Net {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LoggingResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LoggingResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KeithLink.Common.Core.Logging.Log4Net.LoggingResources", typeof(LoggingResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET ANSI_NULLS ON
        ///
        ///SET QUOTED_IDENTIFIER ON
        ///
        ///SET ANSI_PADDING ON
        ///
        ///IF (NOT EXISTS (SELECT * FROM sys.databases 
        ///				WHERE name = &apos;${databaseName}&apos;))
        ///  BEGIN
        ///    CREATE DATABASE [${databaseName}]
        ///  END.
        /// </summary>
        internal static string CreateLogDatabase_SQL {
            get {
                return ResourceManager.GetString("CreateLogDatabase_SQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [${databaseName}]
        ///
        ///SET ANSI_NULLS ON
        ///
        ///SET QUOTED_IDENTIFIER ON
        ///
        ///SET ANSI_PADDING ON
        ///
        ///IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES 
        ///					WHERE TABLE_SCHEMA = &apos;dbo&apos; 
        ///					AND  TABLE_NAME = &apos;Log&apos;))
        ///BEGIN
        ///
        ///	CREATE TABLE [dbo].[Log](
        ///		[Id] [int] IDENTITY(1,1) NOT NULL,
        ///		[Date] [datetime] NOT NULL,
        ///		[Thread] [varchar](255) NOT NULL,
        ///		[Host] [varchar] (255) NOT NULL,
        ///		[User] [varchar] (255) NOT NULL,
        ///		[Application] [varchar] (255) NOT NULL,
        ///		[Level] [varchar](50) NOT NULL, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateLogTable_SQL {
            get {
                return ResourceManager.GetString("CreateLogTable_SQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;log4net&gt;
        ///  &lt;!-- CONSOLE APPDENDER --&gt;
        ///  &lt;appender name=&quot;ConsoleAppender&quot; type=&quot;log4net.Appender.ConsoleAppender&quot;&gt;
        ///    &lt;layout type=&quot;log4net.Layout.PatternLayout&quot;&gt;
        ///      &lt;conversionPattern value=&quot;%date [%-15.15thread] %-5level [%-45.45logger] [%-45.45environment] [%-45.45application] - %message%newline&quot; /&gt;
        ///    &lt;/layout&gt;
        ///  &lt;/appender&gt;
        ///
        ///  &lt;!-- ROLLING FILE APPENDER --&gt;
        ///  &lt;appender name=&quot;RollingFileAppender&quot; type=&quot;log4net.Appender.RollingFileAppender&quot;&gt;
        ///    &lt;file value=&quot;logs/app.log&quot; /&gt;
        ///    &lt;appendTo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string log4netConfig_XML {
            get {
                return ResourceManager.GetString("log4netConfig_XML", resourceCulture);
            }
        }
    }
}
