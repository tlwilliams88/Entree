<?xml version="1.0" encoding="utf-8"?>
<views MappingHash="65d98944506037fe213e937b8f3c46f51ad0ecefb0923b27146a08b69829cc5c">
  <view extent="CodeFirstDatabase.BranchSupport"><![CDATA[
    SELECT VALUE -- Constructing BranchSupport
        [CodeFirstDatabaseSchema.BranchSupport](T1.BranchSupport_Id, T1.BranchSupport_BranchName, T1.BranchSupport_BranchId, T1.BranchSupport_SupportPhoneNumber, T1.BranchSupport_TollFreeNumber, T1.BranchSupport_Email, T1.BranchSupport_CreatedUtc, T1.BranchSupport_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS BranchSupport_Id, 
            T.BranchName AS BranchSupport_BranchName, 
            T.BranchId AS BranchSupport_BranchId, 
            T.SupportPhoneNumber AS BranchSupport_SupportPhoneNumber, 
            T.TollFreeNumber AS BranchSupport_TollFreeNumber, 
            T.Email AS BranchSupport_Email, 
            T.CreatedUtc AS BranchSupport_CreatedUtc, 
            T.ModifiedUtc AS BranchSupport_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.BranchSupports AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.BranchSupports"><![CDATA[
    SELECT VALUE -- Constructing BranchSupports
        [KeithLink.Svc.Impl.Repository.EF.Operational.BranchSupport](T1.BranchSupport_Id, T1.BranchSupport_BranchName, T1.BranchSupport_BranchId, T1.BranchSupport_SupportPhoneNumber, T1.BranchSupport_TollFreeNumber, T1.BranchSupport_Email, T1.BranchSupport_CreatedUtc, T1.BranchSupport_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS BranchSupport_Id, 
            T.BranchName AS BranchSupport_BranchName, 
            T.BranchId AS BranchSupport_BranchId, 
            T.SupportPhoneNumber AS BranchSupport_SupportPhoneNumber, 
            T.TollFreeNumber AS BranchSupport_TollFreeNumber, 
            T.Email AS BranchSupport_Email, 
            T.CreatedUtc AS BranchSupport_CreatedUtc, 
            T.ModifiedUtc AS BranchSupport_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.BranchSupport AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.CustomerTopic"><![CDATA[
    SELECT VALUE -- Constructing CustomerTopic
        [CodeFirstDatabaseSchema.CustomerTopic](T1.CustomerTopic_Id, T1.CustomerTopic_CustomerNumber, T1.CustomerTopic_ProviderTopicId, T1.CustomerTopic_NotificationType, T1.CustomerTopic_CreatedUtc, T1.CustomerTopic_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS CustomerTopic_Id, 
            T.CustomerNumber AS CustomerTopic_CustomerNumber, 
            T.ProviderTopicId AS CustomerTopic_ProviderTopicId, 
            CAST(T.NotificationType AS [Edm.Int32]) AS CustomerTopic_NotificationType, 
            T.CreatedUtc AS CustomerTopic_CreatedUtc, 
            T.ModifiedUtc AS CustomerTopic_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.CustomerTopics AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.UserTopicSubscription"><![CDATA[
    SELECT VALUE -- Constructing UserTopicSubscription
        [CodeFirstDatabaseSchema.UserTopicSubscription](T3.UserTopicSubscription_Id, T3.UserTopicSubscription_UserId, T3.UserTopicSubscription_Channel, T3.UserTopicSubscription_ProviderSubscriptionId, T3.UserTopicSubscription_NotificationEndpoint, T3.UserTopicSubscription_CreatedUtc, T3.UserTopicSubscription_ModifiedUtc, T3.[UserTopicSubscription.CustomerTopic_Id])
    FROM (
        SELECT T1.UserTopicSubscription_Id, T1.UserTopicSubscription_UserId, T1.UserTopicSubscription_Channel, T1.UserTopicSubscription_ProviderSubscriptionId, T1.UserTopicSubscription_NotificationEndpoint, T1.UserTopicSubscription_CreatedUtc, T1.UserTopicSubscription_ModifiedUtc, T2.[UserTopicSubscription.CustomerTopic_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS UserTopicSubscription_Id, 
                T.UserId AS UserTopicSubscription_UserId, 
                CAST(T.Channel AS [Edm.Int32]) AS UserTopicSubscription_Channel, 
                T.ProviderSubscriptionId AS UserTopicSubscription_ProviderSubscriptionId, 
                T.NotificationEndpoint AS UserTopicSubscription_NotificationEndpoint, 
                T.CreatedUtc AS UserTopicSubscription_CreatedUtc, 
                T.ModifiedUtc AS UserTopicSubscription_ModifiedUtc, 
                True AS _from0
            FROM BEKDBContext.UserTopicSubscriptions AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.CustomerTopic_Subscriptions_Target).Id AS UserTopicSubscription_Id, 
                Key(T.CustomerTopic_Subscriptions_Source).Id AS [UserTopicSubscription.CustomerTopic_Id], 
                True AS _from1
            FROM BEKDBContext.CustomerTopic_Subscriptions AS T) AS T2
            ON T1.UserTopicSubscription_Id = T2.UserTopicSubscription_Id
    ) AS T3]]></view>
  <view extent="BEKDBContext.CustomerTopics"><![CDATA[
    SELECT VALUE -- Constructing CustomerTopics
        [KeithLink.Svc.Impl.Repository.EF.Operational.CustomerTopic](T1.CustomerTopic_Id, T1.CustomerTopic_CustomerNumber, T1.CustomerTopic_ProviderTopicId, T1.CustomerTopic_NotificationType, T1.CustomerTopic_CreatedUtc, T1.CustomerTopic_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS CustomerTopic_Id, 
            T.CustomerNumber AS CustomerTopic_CustomerNumber, 
            T.ProviderTopicId AS CustomerTopic_ProviderTopicId, 
            CAST(T.NotificationType AS [KeithLink.Svc.Impl.Repository.EF.Operational.NotificationType]) AS CustomerTopic_NotificationType, 
            T.CreatedUtc AS CustomerTopic_CreatedUtc, 
            T.ModifiedUtc AS CustomerTopic_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.CustomerTopic AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.UserTopicSubscriptions"><![CDATA[
    SELECT VALUE -- Constructing UserTopicSubscriptions
        [KeithLink.Svc.Impl.Repository.EF.Operational.UserTopicSubscription](T1.UserTopicSubscription_Id, T1.UserTopicSubscription_UserId, T1.UserTopicSubscription_Channel, T1.UserTopicSubscription_ProviderSubscriptionId, T1.UserTopicSubscription_NotificationEndpoint, T1.UserTopicSubscription_CreatedUtc, T1.UserTopicSubscription_ModifiedUtc) WITH 
        RELATIONSHIP(CREATEREF(BEKDBContext.CustomerTopics, ROW(T1.[CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Source.Id]),[KeithLink.Svc.Impl.Repository.EF.Operational.CustomerTopic]),[KeithLink.Svc.Impl.Repository.EF.Operational.CustomerTopic_Subscriptions],CustomerTopic_Subscriptions_Target,CustomerTopic_Subscriptions_Source) 
    FROM (
        SELECT 
            T.Id AS UserTopicSubscription_Id, 
            T.UserId AS UserTopicSubscription_UserId, 
            CAST(T.Channel AS [KeithLink.Svc.Impl.Repository.EF.Operational.Channel]) AS UserTopicSubscription_Channel, 
            T.ProviderSubscriptionId AS UserTopicSubscription_ProviderSubscriptionId, 
            T.NotificationEndpoint AS UserTopicSubscription_NotificationEndpoint, 
            T.CreatedUtc AS UserTopicSubscription_CreatedUtc, 
            T.ModifiedUtc AS UserTopicSubscription_ModifiedUtc, 
            True AS _from0, 
            T.CustomerTopic_Id AS [CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Source.Id]
        FROM CodeFirstDatabase.UserTopicSubscription AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.CustomerTopic_Subscriptions"><![CDATA[
    SELECT VALUE -- Constructing CustomerTopic_Subscriptions
        [KeithLink.Svc.Impl.Repository.EF.Operational.CustomerTopic_Subscriptions](T3.[CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Source], T3.[CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Target])
    FROM (
        SELECT -- Constructing CustomerTopic_Subscriptions_Source
            CreateRef(BEKDBContext.CustomerTopics, row(T2.[CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Source.Id]), [KeithLink.Svc.Impl.Repository.EF.Operational.CustomerTopic]) AS [CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Source], 
            T2.[CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Target]
        FROM (
            SELECT -- Constructing CustomerTopic_Subscriptions_Target
                T1.[CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Source.Id], 
                CreateRef(BEKDBContext.UserTopicSubscriptions, row(T1.[CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Target.Id]), [KeithLink.Svc.Impl.Repository.EF.Operational.UserTopicSubscription]) AS [CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Target]
            FROM (
                SELECT 
                    T.CustomerTopic_Id AS [CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Source.Id], 
                    T.Id AS [CustomerTopic_Subscriptions.CustomerTopic_Subscriptions_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.UserTopicSubscription AS T
                WHERE T.CustomerTopic_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3]]></view>
  <view extent="CodeFirstDatabase.DsrAlias"><![CDATA[
    SELECT VALUE -- Constructing DsrAlias
        [CodeFirstDatabaseSchema.DsrAlias](T1.DsrAlias_Id, T1.DsrAlias_UserId, T1.DsrAlias_UserName, T1.DsrAlias_BranchId, T1.DsrAlias_DsrNumber, T1.DsrAlias_CreatedUtc, T1.DsrAlias_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS DsrAlias_Id, 
            T.UserId AS DsrAlias_UserId, 
            T.UserName AS DsrAlias_UserName, 
            T.BranchId AS DsrAlias_BranchId, 
            T.DsrNumber AS DsrAlias_DsrNumber, 
            T.CreatedUtc AS DsrAlias_CreatedUtc, 
            T.ModifiedUtc AS DsrAlias_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.DsrAliases AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.DsrAliases"><![CDATA[
    SELECT VALUE -- Constructing DsrAliases
        [KeithLink.Svc.Impl.Repository.EF.Operational.DsrAlias](T1.DsrAlias_Id, T1.DsrAlias_UserId, T1.DsrAlias_UserName, T1.DsrAlias_BranchId, T1.DsrAlias_DsrNumber, T1.DsrAlias_CreatedUtc, T1.DsrAlias_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS DsrAlias_Id, 
            T.UserId AS DsrAlias_UserId, 
            T.UserName AS DsrAlias_UserName, 
            T.BranchId AS DsrAlias_BranchId, 
            T.DsrNumber AS DsrAlias_DsrNumber, 
            T.CreatedUtc AS DsrAlias_CreatedUtc, 
            T.ModifiedUtc AS DsrAlias_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.DsrAlias AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.Dsr"><![CDATA[
    SELECT VALUE -- Constructing Dsr
        [CodeFirstDatabaseSchema.Dsr](T1.Dsr_Id, T1.Dsr_DsrNumber, T1.Dsr_EmailAddress, T1.Dsr_BranchId, T1.Dsr_Name, T1.Dsr_Phone, T1.Dsr_ImageUrl, T1.Dsr_CreatedUtc, T1.Dsr_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS Dsr_Id, 
            T.DsrNumber AS Dsr_DsrNumber, 
            T.EmailAddress AS Dsr_EmailAddress, 
            T.BranchId AS Dsr_BranchId, 
            T.Name AS Dsr_Name, 
            T.Phone AS Dsr_Phone, 
            T.ImageUrl AS Dsr_ImageUrl, 
            T.CreatedUtc AS Dsr_CreatedUtc, 
            T.ModifiedUtc AS Dsr_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.Dsrs AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.Dsrs"><![CDATA[
    SELECT VALUE -- Constructing Dsrs
        [KeithLink.Svc.Impl.Repository.EF.Operational.Dsr](T1.Dsr_Id, T1.Dsr_DsrNumber, T1.Dsr_EmailAddress, T1.Dsr_BranchId, T1.Dsr_Name, T1.Dsr_Phone, T1.Dsr_ImageUrl, T1.Dsr_CreatedUtc, T1.Dsr_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS Dsr_Id, 
            T.DsrNumber AS Dsr_DsrNumber, 
            T.EmailAddress AS Dsr_EmailAddress, 
            T.BranchId AS Dsr_BranchId, 
            T.Name AS Dsr_Name, 
            T.Phone AS Dsr_Phone, 
            T.ImageUrl AS Dsr_ImageUrl, 
            T.CreatedUtc AS Dsr_CreatedUtc, 
            T.ModifiedUtc AS Dsr_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.Dsr AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.ExportSetting"><![CDATA[
    SELECT VALUE -- Constructing ExportSetting
        [CodeFirstDatabaseSchema.ExportSetting](T1.ExportSetting_Id, T1.ExportSetting_UserId, T1.ExportSetting_Type, T1.ExportSetting_ListType, T1.ExportSetting_Settings, T1.ExportSetting_ExportFormat, T1.ExportSetting_CreatedUtc, T1.ExportSetting_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS ExportSetting_Id, 
            T.UserId AS ExportSetting_UserId, 
            CAST(T.Type AS [Edm.Int32]) AS ExportSetting_Type, 
            CAST(T.ListType AS [Edm.Int32]) AS ExportSetting_ListType, 
            T.Settings AS ExportSetting_Settings, 
            T.ExportFormat AS ExportSetting_ExportFormat, 
            T.CreatedUtc AS ExportSetting_CreatedUtc, 
            T.ModifiedUtc AS ExportSetting_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.ExportSettings AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.ExportSettings"><![CDATA[
    SELECT VALUE -- Constructing ExportSettings
        [KeithLink.Svc.Impl.Repository.EF.Operational.ExportSetting](T1.ExportSetting_Id, T1.ExportSetting_UserId, T1.ExportSetting_Type, T1.ExportSetting_ListType, T1.ExportSetting_Settings, T1.ExportSetting_ExportFormat, T1.ExportSetting_CreatedUtc, T1.ExportSetting_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS ExportSetting_Id, 
            T.UserId AS ExportSetting_UserId, 
            CAST(T.Type AS [KeithLink.Svc.Impl.Repository.EF.Operational.ExportType]) AS ExportSetting_Type, 
            CAST(T.ListType AS [KeithLink.Svc.Impl.Repository.EF.Operational.ListType]) AS ExportSetting_ListType, 
            T.Settings AS ExportSetting_Settings, 
            T.ExportFormat AS ExportSetting_ExportFormat, 
            T.CreatedUtc AS ExportSetting_CreatedUtc, 
            T.ModifiedUtc AS ExportSetting_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.ExportSetting AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.ExternalCatalog"><![CDATA[
    SELECT VALUE -- Constructing ExternalCatalog
        [CodeFirstDatabaseSchema.ExternalCatalog](T1.ExternalCatalog_Id, T1.ExternalCatalog_BekBranchId, T1.ExternalCatalog_ExternalBranchId, T1.ExternalCatalog_Type, T1.ExternalCatalog_CreatedUtc, T1.ExternalCatalog_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS ExternalCatalog_Id, 
            T.BekBranchId AS ExternalCatalog_BekBranchId, 
            T.ExternalBranchId AS ExternalCatalog_ExternalBranchId, 
            CAST(T.Type AS [Edm.Int32]) AS ExternalCatalog_Type, 
            T.CreatedUtc AS ExternalCatalog_CreatedUtc, 
            T.ModifiedUtc AS ExternalCatalog_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.ExternalCatalogs AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.ExternalCatalogs"><![CDATA[
    SELECT VALUE -- Constructing ExternalCatalogs
        [KeithLink.Svc.Impl.Repository.EF.Operational.ExternalCatalog](T1.ExternalCatalog_Id, T1.ExternalCatalog_BekBranchId, T1.ExternalCatalog_ExternalBranchId, T1.ExternalCatalog_Type, T1.ExternalCatalog_CreatedUtc, T1.ExternalCatalog_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS ExternalCatalog_Id, 
            T.BekBranchId AS ExternalCatalog_BekBranchId, 
            T.ExternalBranchId AS ExternalCatalog_ExternalBranchId, 
            CAST(T.Type AS [KeithLink.Svc.Impl.Repository.EF.Operational.ExternalCatalogType]) AS ExternalCatalog_Type, 
            T.CreatedUtc AS ExternalCatalog_CreatedUtc, 
            T.ModifiedUtc AS ExternalCatalog_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.ExternalCatalog AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.InternalUserAccess"><![CDATA[
    SELECT VALUE -- Constructing InternalUserAccess
        [CodeFirstDatabaseSchema.InternalUserAccess](T1.InternalUserAccess_Id, T1.InternalUserAccess_BranchId, T1.InternalUserAccess_CustomerNumber, T1.InternalUserAccess_UserId, T1.InternalUserAccess_CustomerId, T1.InternalUserAccess_RoleId, T1.InternalUserAccess_EmailAddress, T1.InternalUserAccess_CreatedUtc, T1.InternalUserAccess_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS InternalUserAccess_Id, 
            T.BranchId AS InternalUserAccess_BranchId, 
            T.CustomerNumber AS InternalUserAccess_CustomerNumber, 
            T.UserId AS InternalUserAccess_UserId, 
            T.CustomerId AS InternalUserAccess_CustomerId, 
            T.RoleId AS InternalUserAccess_RoleId, 
            T.EmailAddress AS InternalUserAccess_EmailAddress, 
            T.CreatedUtc AS InternalUserAccess_CreatedUtc, 
            T.ModifiedUtc AS InternalUserAccess_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.InternalUserAccess AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.InternalUserAccess"><![CDATA[
    SELECT VALUE -- Constructing InternalUserAccess
        [KeithLink.Svc.Impl.Repository.EF.Operational.InternalUserAccess](T1.InternalUserAccess_Id, T1.InternalUserAccess_BranchId, T1.InternalUserAccess_CustomerNumber, T1.InternalUserAccess_UserId, T1.InternalUserAccess_CustomerId, T1.InternalUserAccess_RoleId, T1.InternalUserAccess_EmailAddress, T1.InternalUserAccess_CreatedUtc, T1.InternalUserAccess_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS InternalUserAccess_Id, 
            T.BranchId AS InternalUserAccess_BranchId, 
            T.CustomerNumber AS InternalUserAccess_CustomerNumber, 
            T.UserId AS InternalUserAccess_UserId, 
            T.CustomerId AS InternalUserAccess_CustomerId, 
            T.RoleId AS InternalUserAccess_RoleId, 
            T.EmailAddress AS InternalUserAccess_EmailAddress, 
            T.CreatedUtc AS InternalUserAccess_CreatedUtc, 
            T.ModifiedUtc AS InternalUserAccess_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.InternalUserAccess AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.InvoiceItem"><![CDATA[
    SELECT VALUE -- Constructing InvoiceItem
        [CodeFirstDatabaseSchema.InvoiceItem](T1.InvoiceItem_Id, T1.InvoiceItem_ItemNumber, T1.InvoiceItem_QuantityOrdered, T1.InvoiceItem_QuantityShipped, T1.InvoiceItem_CatchWeightCode, T1.InvoiceItem_ExtCatchWeight, T1.InvoiceItem_ItemPrice, T1.InvoiceItem_ExtSalesNet, T1.InvoiceItem_LineNumber, T1.InvoiceItem_ClassCode, T1.InvoiceItem_InvoiceId, T1.InvoiceItem_CreatedUtc, T1.InvoiceItem_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS InvoiceItem_Id, 
            T.ItemNumber AS InvoiceItem_ItemNumber, 
            T.QuantityOrdered AS InvoiceItem_QuantityOrdered, 
            T.QuantityShipped AS InvoiceItem_QuantityShipped, 
            T.CatchWeightCode AS InvoiceItem_CatchWeightCode, 
            T.ExtCatchWeight AS InvoiceItem_ExtCatchWeight, 
            T.ItemPrice AS InvoiceItem_ItemPrice, 
            T.ExtSalesNet AS InvoiceItem_ExtSalesNet, 
            T.LineNumber AS InvoiceItem_LineNumber, 
            T.ClassCode AS InvoiceItem_ClassCode, 
            T.InvoiceId AS InvoiceItem_InvoiceId, 
            T.CreatedUtc AS InvoiceItem_CreatedUtc, 
            T.ModifiedUtc AS InvoiceItem_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.InvoiceItems AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.Invoice"><![CDATA[
    SELECT VALUE -- Constructing Invoice
        [CodeFirstDatabaseSchema.Invoice](T1.Invoice_Id, T1.Invoice_CustomerNumber, T1.Invoice_BranchId, T1.Invoice_InvoiceNumber, T1.Invoice_OrderDate, T1.Invoice_InvoiceDate, T1.Invoice_Type, T1.Invoice_Amount, T1.Invoice_Status, T1.Invoice_DueDate, T1.Invoice_CreatedUtc, T1.Invoice_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS Invoice_Id, 
            T.CustomerNumber AS Invoice_CustomerNumber, 
            T.BranchId AS Invoice_BranchId, 
            T.InvoiceNumber AS Invoice_InvoiceNumber, 
            T.OrderDate AS Invoice_OrderDate, 
            T.InvoiceDate AS Invoice_InvoiceDate, 
            CAST(T.Type AS [Edm.Int32]) AS Invoice_Type, 
            T.Amount AS Invoice_Amount, 
            CAST(T.Status AS [Edm.Int32]) AS Invoice_Status, 
            T.DueDate AS Invoice_DueDate, 
            T.CreatedUtc AS Invoice_CreatedUtc, 
            T.ModifiedUtc AS Invoice_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.Invoices AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.InvoiceItems"><![CDATA[
    SELECT VALUE -- Constructing InvoiceItems
        [KeithLink.Svc.Impl.Repository.EF.Operational.InvoiceItem](T1.InvoiceItem_Id, T1.InvoiceItem_ItemNumber, T1.InvoiceItem_QuantityOrdered, T1.InvoiceItem_QuantityShipped, T1.InvoiceItem_CatchWeightCode, T1.InvoiceItem_ExtCatchWeight, T1.InvoiceItem_ItemPrice, T1.InvoiceItem_ExtSalesNet, T1.InvoiceItem_LineNumber, T1.InvoiceItem_ClassCode, T1.InvoiceItem_InvoiceId, T1.InvoiceItem_CreatedUtc, T1.InvoiceItem_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS InvoiceItem_Id, 
            T.ItemNumber AS InvoiceItem_ItemNumber, 
            T.QuantityOrdered AS InvoiceItem_QuantityOrdered, 
            T.QuantityShipped AS InvoiceItem_QuantityShipped, 
            T.CatchWeightCode AS InvoiceItem_CatchWeightCode, 
            T.ExtCatchWeight AS InvoiceItem_ExtCatchWeight, 
            T.ItemPrice AS InvoiceItem_ItemPrice, 
            T.ExtSalesNet AS InvoiceItem_ExtSalesNet, 
            T.LineNumber AS InvoiceItem_LineNumber, 
            T.ClassCode AS InvoiceItem_ClassCode, 
            T.InvoiceId AS InvoiceItem_InvoiceId, 
            T.CreatedUtc AS InvoiceItem_CreatedUtc, 
            T.ModifiedUtc AS InvoiceItem_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.InvoiceItem AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.Invoices"><![CDATA[
    SELECT VALUE -- Constructing Invoices
        [KeithLink.Svc.Impl.Repository.EF.Operational.Invoice](T1.Invoice_Id, T1.Invoice_CustomerNumber, T1.Invoice_BranchId, T1.Invoice_InvoiceNumber, T1.Invoice_OrderDate, T1.Invoice_InvoiceDate, T1.Invoice_Type, T1.Invoice_Amount, T1.Invoice_Status, T1.Invoice_DueDate, T1.Invoice_CreatedUtc, T1.Invoice_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS Invoice_Id, 
            T.CustomerNumber AS Invoice_CustomerNumber, 
            T.BranchId AS Invoice_BranchId, 
            T.InvoiceNumber AS Invoice_InvoiceNumber, 
            T.OrderDate AS Invoice_OrderDate, 
            T.InvoiceDate AS Invoice_InvoiceDate, 
            CAST(T.Type AS [KeithLink.Svc.Impl.Repository.EF.Operational.InvoiceType]) AS Invoice_Type, 
            T.Amount AS Invoice_Amount, 
            CAST(T.Status AS [KeithLink.Svc.Impl.Repository.EF.Operational.InvoiceStatus]) AS Invoice_Status, 
            T.DueDate AS Invoice_DueDate, 
            T.CreatedUtc AS Invoice_CreatedUtc, 
            T.ModifiedUtc AS Invoice_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.Invoice AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.ItemHistory"><![CDATA[
    SELECT VALUE -- Constructing ItemHistory
        [CodeFirstDatabaseSchema.ItemHistory](T1.ItemHistory_Id, T1.ItemHistory_BranchId, T1.ItemHistory_CustomerNumber, T1.ItemHistory_ItemNumber, T1.ItemHistory_UnitOfMeasure, T1.ItemHistory_AverageUse, T1.ItemHistory_CreatedUtc, T1.ItemHistory_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS ItemHistory_Id, 
            T.BranchId AS ItemHistory_BranchId, 
            T.CustomerNumber AS ItemHistory_CustomerNumber, 
            T.ItemNumber AS ItemHistory_ItemNumber, 
            T.UnitOfMeasure AS ItemHistory_UnitOfMeasure, 
            T.AverageUse AS ItemHistory_AverageUse, 
            T.CreatedUtc AS ItemHistory_CreatedUtc, 
            T.ModifiedUtc AS ItemHistory_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.ItemHistory AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.ItemHistory"><![CDATA[
    SELECT VALUE -- Constructing ItemHistory
        [KeithLink.Svc.Impl.Repository.EF.Operational.ItemHistory](T1.ItemHistory_Id, T1.ItemHistory_BranchId, T1.ItemHistory_CustomerNumber, T1.ItemHistory_ItemNumber, T1.ItemHistory_UnitOfMeasure, T1.ItemHistory_AverageUse, T1.ItemHistory_CreatedUtc, T1.ItemHistory_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS ItemHistory_Id, 
            T.BranchId AS ItemHistory_BranchId, 
            T.CustomerNumber AS ItemHistory_CustomerNumber, 
            T.ItemNumber AS ItemHistory_ItemNumber, 
            T.UnitOfMeasure AS ItemHistory_UnitOfMeasure, 
            T.AverageUse AS ItemHistory_AverageUse, 
            T.CreatedUtc AS ItemHistory_CreatedUtc, 
            T.ModifiedUtc AS ItemHistory_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.ItemHistory AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.ListItem"><![CDATA[
    SELECT VALUE -- Constructing ListItem
        [CodeFirstDatabaseSchema.ListItem](T3.ListItem_Id, T3.ListItem_ItemNumber, T3.ListItem_Label, T3.ListItem_Par, T3.ListItem_Note, T3.ListItem_Category, T3.ListItem_Position, T3.ListItem_FromDate, T3.ListItem_ToDate, T3.ListItem_Each, T3.ListItem_Quantity, T3.ListItem_CatalogId, T3.ListItem_CreatedUtc, T3.ListItem_ModifiedUtc, T3.[ListItem.ParentList_Id])
    FROM (
        SELECT T1.ListItem_Id, T1.ListItem_ItemNumber, T1.ListItem_Label, T1.ListItem_Par, T1.ListItem_Note, T1.ListItem_Category, T1.ListItem_Position, T1.ListItem_FromDate, T1.ListItem_ToDate, T1.ListItem_Each, T1.ListItem_Quantity, T1.ListItem_CatalogId, T1.ListItem_CreatedUtc, T1.ListItem_ModifiedUtc, T2.[ListItem.ParentList_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS ListItem_Id, 
                T.ItemNumber AS ListItem_ItemNumber, 
                T.Label AS ListItem_Label, 
                T.Par AS ListItem_Par, 
                T.Note AS ListItem_Note, 
                T.Category AS ListItem_Category, 
                T.Position AS ListItem_Position, 
                T.FromDate AS ListItem_FromDate, 
                T.ToDate AS ListItem_ToDate, 
                T.Each AS ListItem_Each, 
                T.Quantity AS ListItem_Quantity, 
                T.CatalogId AS ListItem_CatalogId, 
                T.CreatedUtc AS ListItem_CreatedUtc, 
                T.ModifiedUtc AS ListItem_ModifiedUtc, 
                True AS _from0
            FROM BEKDBContext.ListItems AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.List_Items_Target).Id AS ListItem_Id, 
                Key(T.List_Items_Source).Id AS [ListItem.ParentList_Id], 
                True AS _from1
            FROM BEKDBContext.List_Items AS T) AS T2
            ON T1.ListItem_Id = T2.ListItem_Id
    ) AS T3]]></view>
  <view extent="CodeFirstDatabase.List"><![CDATA[
    SELECT VALUE -- Constructing List
        [CodeFirstDatabaseSchema.List](T1.List_Id, T1.List_UserId, T1.List_DisplayName, T1.List_Type, T1.List_CustomerId, T1.List_BranchId, T1.List_AccountNumber, T1.List_ReadOnly, T1.List_CreatedUtc, T1.List_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS List_Id, 
            T.UserId AS List_UserId, 
            T.DisplayName AS List_DisplayName, 
            CAST(T.Type AS [Edm.Int32]) AS List_Type, 
            T.CustomerId AS List_CustomerId, 
            T.BranchId AS List_BranchId, 
            T.AccountNumber AS List_AccountNumber, 
            T.ReadOnly AS List_ReadOnly, 
            T.CreatedUtc AS List_CreatedUtc, 
            T.ModifiedUtc AS List_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.Lists AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.ListShare"><![CDATA[
    SELECT VALUE -- Constructing ListShare
        [CodeFirstDatabaseSchema.ListShare](T3.ListShare_Id, T3.ListShare_CustomerId, T3.ListShare_BranchId, T3.ListShare_CreatedUtc, T3.ListShare_ModifiedUtc, T3.[ListShare.SharedList_Id])
    FROM (
        SELECT T1.ListShare_Id, T1.ListShare_CustomerId, T1.ListShare_BranchId, T1.ListShare_CreatedUtc, T1.ListShare_ModifiedUtc, T2.[ListShare.SharedList_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS ListShare_Id, 
                T.CustomerId AS ListShare_CustomerId, 
                T.BranchId AS ListShare_BranchId, 
                T.CreatedUtc AS ListShare_CreatedUtc, 
                T.ModifiedUtc AS ListShare_ModifiedUtc, 
                True AS _from0
            FROM BEKDBContext.ListShares AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.ListShare_SharedList_Source).Id AS ListShare_Id, 
                Key(T.ListShare_SharedList_Target).Id AS [ListShare.SharedList_Id], 
                True AS _from1
            FROM BEKDBContext.ListShare_SharedList AS T) AS T2
            ON T1.ListShare_Id = T2.ListShare_Id
    ) AS T3]]></view>
  <view extent="BEKDBContext.ListItems"><![CDATA[
    SELECT VALUE -- Constructing ListItems
        [KeithLink.Svc.Impl.Repository.EF.Operational.ListItem](T1.ListItem_Id, T1.ListItem_ItemNumber, T1.ListItem_Label, T1.ListItem_Par, T1.ListItem_Note, T1.ListItem_Category, T1.ListItem_Position, T1.ListItem_FromDate, T1.ListItem_ToDate, T1.ListItem_Each, T1.ListItem_Quantity, T1.ListItem_CatalogId, T1.ListItem_CreatedUtc, T1.ListItem_ModifiedUtc) WITH 
        RELATIONSHIP(CREATEREF(BEKDBContext.Lists, ROW(T1.[List_Items.List_Items_Source.Id]),[KeithLink.Svc.Impl.Repository.EF.Operational.List]),[KeithLink.Svc.Impl.Repository.EF.Operational.List_Items],List_Items_Target,List_Items_Source) 
    FROM (
        SELECT 
            T.Id AS ListItem_Id, 
            T.ItemNumber AS ListItem_ItemNumber, 
            T.Label AS ListItem_Label, 
            T.Par AS ListItem_Par, 
            T.Note AS ListItem_Note, 
            T.Category AS ListItem_Category, 
            T.Position AS ListItem_Position, 
            T.FromDate AS ListItem_FromDate, 
            T.ToDate AS ListItem_ToDate, 
            T.Each AS ListItem_Each, 
            T.Quantity AS ListItem_Quantity, 
            T.CatalogId AS ListItem_CatalogId, 
            T.CreatedUtc AS ListItem_CreatedUtc, 
            T.ModifiedUtc AS ListItem_ModifiedUtc, 
            True AS _from0, 
            T.ParentList_Id AS [List_Items.List_Items_Source.Id]
        FROM CodeFirstDatabase.ListItem AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.List_Items"><![CDATA[
    SELECT VALUE -- Constructing List_Items
        [KeithLink.Svc.Impl.Repository.EF.Operational.List_Items](T3.[List_Items.List_Items_Source], T3.[List_Items.List_Items_Target])
    FROM (
        SELECT -- Constructing List_Items_Source
            CreateRef(BEKDBContext.Lists, row(T2.[List_Items.List_Items_Source.Id]), [KeithLink.Svc.Impl.Repository.EF.Operational.List]) AS [List_Items.List_Items_Source], 
            T2.[List_Items.List_Items_Target]
        FROM (
            SELECT -- Constructing List_Items_Target
                T1.[List_Items.List_Items_Source.Id], 
                CreateRef(BEKDBContext.ListItems, row(T1.[List_Items.List_Items_Target.Id]), [KeithLink.Svc.Impl.Repository.EF.Operational.ListItem]) AS [List_Items.List_Items_Target]
            FROM (
                SELECT 
                    T.ParentList_Id AS [List_Items.List_Items_Source.Id], 
                    T.Id AS [List_Items.List_Items_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.ListItem AS T
                WHERE T.ParentList_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3]]></view>
  <view extent="BEKDBContext.Lists"><![CDATA[
    SELECT VALUE -- Constructing Lists
        [KeithLink.Svc.Impl.Repository.EF.Operational.List](T1.List_Id, T1.List_UserId, T1.List_DisplayName, T1.List_Type, T1.List_CustomerId, T1.List_BranchId, T1.List_AccountNumber, T1.List_ReadOnly, T1.List_CreatedUtc, T1.List_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS List_Id, 
            T.UserId AS List_UserId, 
            T.DisplayName AS List_DisplayName, 
            CAST(T.Type AS [KeithLink.Svc.Impl.Repository.EF.Operational.ListType]) AS List_Type, 
            T.CustomerId AS List_CustomerId, 
            T.BranchId AS List_BranchId, 
            T.AccountNumber AS List_AccountNumber, 
            T.ReadOnly AS List_ReadOnly, 
            T.CreatedUtc AS List_CreatedUtc, 
            T.ModifiedUtc AS List_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.List AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.ListShares"><![CDATA[
    SELECT VALUE -- Constructing ListShares
        [KeithLink.Svc.Impl.Repository.EF.Operational.ListShare](T1.ListShare_Id, T1.ListShare_CustomerId, T1.ListShare_BranchId, T1.ListShare_CreatedUtc, T1.ListShare_ModifiedUtc) WITH 
        RELATIONSHIP(CREATEREF(BEKDBContext.Lists, ROW(T1.[ListShare_SharedList.ListShare_SharedList_Target.Id]),[KeithLink.Svc.Impl.Repository.EF.Operational.List]),[KeithLink.Svc.Impl.Repository.EF.Operational.ListShare_SharedList],ListShare_SharedList_Source,ListShare_SharedList_Target) 
    FROM (
        SELECT 
            T.Id AS ListShare_Id, 
            T.CustomerId AS ListShare_CustomerId, 
            T.BranchId AS ListShare_BranchId, 
            T.CreatedUtc AS ListShare_CreatedUtc, 
            T.ModifiedUtc AS ListShare_ModifiedUtc, 
            True AS _from0, 
            T.SharedList_Id AS [ListShare_SharedList.ListShare_SharedList_Target.Id]
        FROM CodeFirstDatabase.ListShare AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.ListShare_SharedList"><![CDATA[
    SELECT VALUE -- Constructing ListShare_SharedList
        [KeithLink.Svc.Impl.Repository.EF.Operational.ListShare_SharedList](T3.[ListShare_SharedList.ListShare_SharedList_Source], T3.[ListShare_SharedList.ListShare_SharedList_Target])
    FROM (
        SELECT -- Constructing ListShare_SharedList_Source
            CreateRef(BEKDBContext.ListShares, row(T2.[ListShare_SharedList.ListShare_SharedList_Source.Id]), [KeithLink.Svc.Impl.Repository.EF.Operational.ListShare]) AS [ListShare_SharedList.ListShare_SharedList_Source], 
            T2.[ListShare_SharedList.ListShare_SharedList_Target]
        FROM (
            SELECT -- Constructing ListShare_SharedList_Target
                T1.[ListShare_SharedList.ListShare_SharedList_Source.Id], 
                CreateRef(BEKDBContext.Lists, row(T1.[ListShare_SharedList.ListShare_SharedList_Target.Id]), [KeithLink.Svc.Impl.Repository.EF.Operational.List]) AS [ListShare_SharedList.ListShare_SharedList_Target]
            FROM (
                SELECT 
                    T.Id AS [ListShare_SharedList.ListShare_SharedList_Source.Id], 
                    T.SharedList_Id AS [ListShare_SharedList.ListShare_SharedList_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.ListShare AS T
                WHERE T.SharedList_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3]]></view>
  <view extent="CodeFirstDatabase.MarketingPreference"><![CDATA[
    SELECT VALUE -- Constructing MarketingPreference
        [CodeFirstDatabaseSchema.MarketingPreference](T1.MarketingPreference_Id, T1.MarketingPreference_Email, T1.MarketingPreference_BranchId, T1.MarketingPreference_CurrentCustomer, T1.MarketingPreference_LearnMore, T1.MarketingPreference_RegisteredOn, T1.MarketingPreference_CreatedUtc, T1.MarketingPreference_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS MarketingPreference_Id, 
            T.Email AS MarketingPreference_Email, 
            T.BranchId AS MarketingPreference_BranchId, 
            T.CurrentCustomer AS MarketingPreference_CurrentCustomer, 
            T.LearnMore AS MarketingPreference_LearnMore, 
            T.RegisteredOn AS MarketingPreference_RegisteredOn, 
            T.CreatedUtc AS MarketingPreference_CreatedUtc, 
            T.ModifiedUtc AS MarketingPreference_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.MarketingPreferences AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.MarketingPreferences"><![CDATA[
    SELECT VALUE -- Constructing MarketingPreferences
        [KeithLink.Svc.Impl.Repository.EF.Operational.MarketingPreference](T1.MarketingPreference_Id, T1.MarketingPreference_Email, T1.MarketingPreference_BranchId, T1.MarketingPreference_CurrentCustomer, T1.MarketingPreference_LearnMore, T1.MarketingPreference_RegisteredOn, T1.MarketingPreference_CreatedUtc, T1.MarketingPreference_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS MarketingPreference_Id, 
            T.Email AS MarketingPreference_Email, 
            T.BranchId AS MarketingPreference_BranchId, 
            T.CurrentCustomer AS MarketingPreference_CurrentCustomer, 
            T.LearnMore AS MarketingPreference_LearnMore, 
            T.RegisteredOn AS MarketingPreference_RegisteredOn, 
            T.CreatedUtc AS MarketingPreference_CreatedUtc, 
            T.ModifiedUtc AS MarketingPreference_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.MarketingPreference AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.MessageTemplate"><![CDATA[
    SELECT VALUE -- Constructing MessageTemplate
        [CodeFirstDatabaseSchema.MessageTemplate](T1.MessageTemplate_Id, T1.MessageTemplate_TemplateKey, T1.MessageTemplate_Subject, T1.MessageTemplate_IsBodyHtml, T1.MessageTemplate_Body, T1.MessageTemplate_Type, T1.MessageTemplate_CreatedUtc, T1.MessageTemplate_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS MessageTemplate_Id, 
            T.TemplateKey AS MessageTemplate_TemplateKey, 
            T.Subject AS MessageTemplate_Subject, 
            T.IsBodyHtml AS MessageTemplate_IsBodyHtml, 
            T.Body AS MessageTemplate_Body, 
            CAST(T.Type AS [Edm.Int32]) AS MessageTemplate_Type, 
            T.CreatedUtc AS MessageTemplate_CreatedUtc, 
            T.ModifiedUtc AS MessageTemplate_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.MessageTemplates AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.MessageTemplates"><![CDATA[
    SELECT VALUE -- Constructing MessageTemplates
        [KeithLink.Svc.Impl.Repository.EF.Operational.MessageTemplate](T1.MessageTemplate_Id, T1.MessageTemplate_TemplateKey, T1.MessageTemplate_Subject, T1.MessageTemplate_IsBodyHtml, T1.MessageTemplate_Body, T1.MessageTemplate_Type, T1.MessageTemplate_CreatedUtc, T1.MessageTemplate_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS MessageTemplate_Id, 
            T.TemplateKey AS MessageTemplate_TemplateKey, 
            T.Subject AS MessageTemplate_Subject, 
            T.IsBodyHtml AS MessageTemplate_IsBodyHtml, 
            T.Body AS MessageTemplate_Body, 
            CAST(T.Type AS [KeithLink.Svc.Impl.Repository.EF.Operational.MessageTemplateType]) AS MessageTemplate_Type, 
            T.CreatedUtc AS MessageTemplate_CreatedUtc, 
            T.ModifiedUtc AS MessageTemplate_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.MessageTemplate AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.OrderHistoryDetail"><![CDATA[
    SELECT VALUE -- Constructing OrderHistoryDetail
        [CodeFirstDatabaseSchema.OrderHistoryDetail](T3.OrderHistoryDetail_Id, T3.OrderHistoryDetail_BranchId, T3.OrderHistoryDetail_InvoiceNumber, T3.OrderHistoryDetail_LineNumber, T3.OrderHistoryDetail_ItemNumber, T3.OrderHistoryDetail_OrderQuantity, T3.OrderHistoryDetail_ShippedQuantity, T3.OrderHistoryDetail_UnitOfMeasure, T3.OrderHistoryDetail_CatchWeight, T3.OrderHistoryDetail_ItemDeleted, T3.OrderHistoryDetail_SubbedOriginalItemNumber, T3.OrderHistoryDetail_ReplacedOriginalItemNumber, T3.OrderHistoryDetail_ItemStatus, T3.OrderHistoryDetail_TotalShippedWeight, T3.OrderHistoryDetail_SellPrice, T3.OrderHistoryDetail_Source, T3.OrderHistoryDetail_ManufacturerId, T3.OrderHistoryDetail_SpecialOrderHeaderId, T3.OrderHistoryDetail_SpecialOrderLineNumber, T3.OrderHistoryDetail_CreatedUtc, T3.OrderHistoryDetail_ModifiedUtc, T3.[OrderHistoryDetail.OrderHistoryHeader_Id])
    FROM (
        SELECT T1.OrderHistoryDetail_Id, T1.OrderHistoryDetail_BranchId, T1.OrderHistoryDetail_InvoiceNumber, T1.OrderHistoryDetail_LineNumber, T1.OrderHistoryDetail_ItemNumber, T1.OrderHistoryDetail_OrderQuantity, T1.OrderHistoryDetail_ShippedQuantity, T1.OrderHistoryDetail_UnitOfMeasure, T1.OrderHistoryDetail_CatchWeight, T1.OrderHistoryDetail_ItemDeleted, T1.OrderHistoryDetail_SubbedOriginalItemNumber, T1.OrderHistoryDetail_ReplacedOriginalItemNumber, T1.OrderHistoryDetail_ItemStatus, T1.OrderHistoryDetail_TotalShippedWeight, T1.OrderHistoryDetail_SellPrice, T1.OrderHistoryDetail_Source, T1.OrderHistoryDetail_ManufacturerId, T1.OrderHistoryDetail_SpecialOrderHeaderId, T1.OrderHistoryDetail_SpecialOrderLineNumber, T1.OrderHistoryDetail_CreatedUtc, T1.OrderHistoryDetail_ModifiedUtc, T2.[OrderHistoryDetail.OrderHistoryHeader_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS OrderHistoryDetail_Id, 
                T.BranchId AS OrderHistoryDetail_BranchId, 
                T.InvoiceNumber AS OrderHistoryDetail_InvoiceNumber, 
                T.LineNumber AS OrderHistoryDetail_LineNumber, 
                T.ItemNumber AS OrderHistoryDetail_ItemNumber, 
                T.OrderQuantity AS OrderHistoryDetail_OrderQuantity, 
                T.ShippedQuantity AS OrderHistoryDetail_ShippedQuantity, 
                T.UnitOfMeasure AS OrderHistoryDetail_UnitOfMeasure, 
                T.CatchWeight AS OrderHistoryDetail_CatchWeight, 
                T.ItemDeleted AS OrderHistoryDetail_ItemDeleted, 
                T.SubbedOriginalItemNumber AS OrderHistoryDetail_SubbedOriginalItemNumber, 
                T.ReplacedOriginalItemNumber AS OrderHistoryDetail_ReplacedOriginalItemNumber, 
                T.ItemStatus AS OrderHistoryDetail_ItemStatus, 
                T.TotalShippedWeight AS OrderHistoryDetail_TotalShippedWeight, 
                T.SellPrice AS OrderHistoryDetail_SellPrice, 
                T.Source AS OrderHistoryDetail_Source, 
                T.ManufacturerId AS OrderHistoryDetail_ManufacturerId, 
                T.SpecialOrderHeaderId AS OrderHistoryDetail_SpecialOrderHeaderId, 
                T.SpecialOrderLineNumber AS OrderHistoryDetail_SpecialOrderLineNumber, 
                T.CreatedUtc AS OrderHistoryDetail_CreatedUtc, 
                T.ModifiedUtc AS OrderHistoryDetail_ModifiedUtc, 
                True AS _from0
            FROM BEKDBContext.OrderHistoryDetails AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.OrderHistoryHeader_OrderDetails_Target).Id AS OrderHistoryDetail_Id, 
                Key(T.OrderHistoryHeader_OrderDetails_Source).Id AS [OrderHistoryDetail.OrderHistoryHeader_Id], 
                True AS _from1
            FROM BEKDBContext.OrderHistoryHeader_OrderDetails AS T) AS T2
            ON T1.OrderHistoryDetail_Id = T2.OrderHistoryDetail_Id
    ) AS T3]]></view>
  <view extent="CodeFirstDatabase.OrderHistoryHeader"><![CDATA[
    SELECT VALUE -- Constructing OrderHistoryHeader
        [CodeFirstDatabaseSchema.OrderHistoryHeader](T1.OrderHistoryHeader_Id, T1.OrderHistoryHeader_OrderSystem, T1.OrderHistoryHeader_BranchId, T1.OrderHistoryHeader_CustomerNumber, T1.OrderHistoryHeader_InvoiceNumber, T1.OrderHistoryHeader_DeliveryDate, T1.OrderHistoryHeader_PONumber, T1.OrderHistoryHeader_ControlNumber, T1.OrderHistoryHeader_OriginalControlNumber, T1.OrderHistoryHeader_OrderStatus, T1.OrderHistoryHeader_FutureItems, T1.OrderHistoryHeader_ErrorStatus, T1.OrderHistoryHeader_RouteNumber, T1.OrderHistoryHeader_StopNumber, T1.OrderHistoryHeader_IsSpecialOrder, T1.OrderHistoryHeader_RelatedControlNumber, T1.OrderHistoryHeader_ScheduledDeliveryTime, T1.OrderHistoryHeader_EstimatedDeliveryTime, T1.OrderHistoryHeader_ActualDeliveryTime, T1.OrderHistoryHeader_DeliveryOutOfSequence, T1.OrderHistoryHeader_CreatedUtc, T1.OrderHistoryHeader_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS OrderHistoryHeader_Id, 
            T.OrderSystem AS OrderHistoryHeader_OrderSystem, 
            T.BranchId AS OrderHistoryHeader_BranchId, 
            T.CustomerNumber AS OrderHistoryHeader_CustomerNumber, 
            T.InvoiceNumber AS OrderHistoryHeader_InvoiceNumber, 
            T.DeliveryDate AS OrderHistoryHeader_DeliveryDate, 
            T.PONumber AS OrderHistoryHeader_PONumber, 
            T.ControlNumber AS OrderHistoryHeader_ControlNumber, 
            T.OriginalControlNumber AS OrderHistoryHeader_OriginalControlNumber, 
            T.OrderStatus AS OrderHistoryHeader_OrderStatus, 
            T.FutureItems AS OrderHistoryHeader_FutureItems, 
            T.ErrorStatus AS OrderHistoryHeader_ErrorStatus, 
            T.RouteNumber AS OrderHistoryHeader_RouteNumber, 
            T.StopNumber AS OrderHistoryHeader_StopNumber, 
            T.IsSpecialOrder AS OrderHistoryHeader_IsSpecialOrder, 
            T.RelatedControlNumber AS OrderHistoryHeader_RelatedControlNumber, 
            T.ScheduledDeliveryTime AS OrderHistoryHeader_ScheduledDeliveryTime, 
            T.EstimatedDeliveryTime AS OrderHistoryHeader_EstimatedDeliveryTime, 
            T.ActualDeliveryTime AS OrderHistoryHeader_ActualDeliveryTime, 
            T.DeliveryOutOfSequence AS OrderHistoryHeader_DeliveryOutOfSequence, 
            T.CreatedUtc AS OrderHistoryHeader_CreatedUtc, 
            T.ModifiedUtc AS OrderHistoryHeader_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.OrderHistoryHeaders AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.OrderHistoryDetails"><![CDATA[
    SELECT VALUE -- Constructing OrderHistoryDetails
        [KeithLink.Svc.Impl.Repository.EF.Operational.OrderHistoryDetail](T1.OrderHistoryDetail_Id, T1.OrderHistoryDetail_BranchId, T1.OrderHistoryDetail_InvoiceNumber, T1.OrderHistoryDetail_LineNumber, T1.OrderHistoryDetail_ItemNumber, T1.OrderHistoryDetail_OrderQuantity, T1.OrderHistoryDetail_ShippedQuantity, T1.OrderHistoryDetail_UnitOfMeasure, T1.OrderHistoryDetail_CatchWeight, T1.OrderHistoryDetail_ItemDeleted, T1.OrderHistoryDetail_SubbedOriginalItemNumber, T1.OrderHistoryDetail_ReplacedOriginalItemNumber, T1.OrderHistoryDetail_ItemStatus, T1.OrderHistoryDetail_TotalShippedWeight, T1.OrderHistoryDetail_SellPrice, T1.OrderHistoryDetail_Source, T1.OrderHistoryDetail_ManufacturerId, T1.OrderHistoryDetail_SpecialOrderHeaderId, T1.OrderHistoryDetail_SpecialOrderLineNumber, T1.OrderHistoryDetail_CreatedUtc, T1.OrderHistoryDetail_ModifiedUtc) WITH 
        RELATIONSHIP(CREATEREF(BEKDBContext.OrderHistoryHeaders, ROW(T1.[OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Source.Id]),[KeithLink.Svc.Impl.Repository.EF.Operational.OrderHistoryHeader]),[KeithLink.Svc.Impl.Repository.EF.Operational.OrderHistoryHeader_OrderDetails],OrderHistoryHeader_OrderDetails_Target,OrderHistoryHeader_OrderDetails_Source) 
    FROM (
        SELECT 
            T.Id AS OrderHistoryDetail_Id, 
            T.BranchId AS OrderHistoryDetail_BranchId, 
            T.InvoiceNumber AS OrderHistoryDetail_InvoiceNumber, 
            T.LineNumber AS OrderHistoryDetail_LineNumber, 
            T.ItemNumber AS OrderHistoryDetail_ItemNumber, 
            T.OrderQuantity AS OrderHistoryDetail_OrderQuantity, 
            T.ShippedQuantity AS OrderHistoryDetail_ShippedQuantity, 
            T.UnitOfMeasure AS OrderHistoryDetail_UnitOfMeasure, 
            T.CatchWeight AS OrderHistoryDetail_CatchWeight, 
            T.ItemDeleted AS OrderHistoryDetail_ItemDeleted, 
            T.SubbedOriginalItemNumber AS OrderHistoryDetail_SubbedOriginalItemNumber, 
            T.ReplacedOriginalItemNumber AS OrderHistoryDetail_ReplacedOriginalItemNumber, 
            T.ItemStatus AS OrderHistoryDetail_ItemStatus, 
            T.TotalShippedWeight AS OrderHistoryDetail_TotalShippedWeight, 
            T.SellPrice AS OrderHistoryDetail_SellPrice, 
            T.Source AS OrderHistoryDetail_Source, 
            T.ManufacturerId AS OrderHistoryDetail_ManufacturerId, 
            T.SpecialOrderHeaderId AS OrderHistoryDetail_SpecialOrderHeaderId, 
            T.SpecialOrderLineNumber AS OrderHistoryDetail_SpecialOrderLineNumber, 
            T.CreatedUtc AS OrderHistoryDetail_CreatedUtc, 
            T.ModifiedUtc AS OrderHistoryDetail_ModifiedUtc, 
            True AS _from0, 
            T.OrderHistoryHeader_Id AS [OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Source.Id]
        FROM CodeFirstDatabase.OrderHistoryDetail AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.OrderHistoryHeader_OrderDetails"><![CDATA[
    SELECT VALUE -- Constructing OrderHistoryHeader_OrderDetails
        [KeithLink.Svc.Impl.Repository.EF.Operational.OrderHistoryHeader_OrderDetails](T3.[OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Source], T3.[OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Target])
    FROM (
        SELECT -- Constructing OrderHistoryHeader_OrderDetails_Source
            CreateRef(BEKDBContext.OrderHistoryHeaders, row(T2.[OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Source.Id]), [KeithLink.Svc.Impl.Repository.EF.Operational.OrderHistoryHeader]) AS [OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Source], 
            T2.[OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Target]
        FROM (
            SELECT -- Constructing OrderHistoryHeader_OrderDetails_Target
                T1.[OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Source.Id], 
                CreateRef(BEKDBContext.OrderHistoryDetails, row(T1.[OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Target.Id]), [KeithLink.Svc.Impl.Repository.EF.Operational.OrderHistoryDetail]) AS [OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Target]
            FROM (
                SELECT 
                    T.OrderHistoryHeader_Id AS [OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Source.Id], 
                    T.Id AS [OrderHistoryHeader_OrderDetails.OrderHistoryHeader_OrderDetails_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.OrderHistoryDetail AS T
                WHERE T.OrderHistoryHeader_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3]]></view>
  <view extent="BEKDBContext.OrderHistoryHeaders"><![CDATA[
    SELECT VALUE -- Constructing OrderHistoryHeaders
        [KeithLink.Svc.Impl.Repository.EF.Operational.OrderHistoryHeader](T1.OrderHistoryHeader_Id, T1.OrderHistoryHeader_OrderSystem, T1.OrderHistoryHeader_BranchId, T1.OrderHistoryHeader_CustomerNumber, T1.OrderHistoryHeader_InvoiceNumber, T1.OrderHistoryHeader_DeliveryDate, T1.OrderHistoryHeader_PONumber, T1.OrderHistoryHeader_ControlNumber, T1.OrderHistoryHeader_OriginalControlNumber, T1.OrderHistoryHeader_OrderStatus, T1.OrderHistoryHeader_FutureItems, T1.OrderHistoryHeader_ErrorStatus, T1.OrderHistoryHeader_RouteNumber, T1.OrderHistoryHeader_StopNumber, T1.OrderHistoryHeader_IsSpecialOrder, T1.OrderHistoryHeader_RelatedControlNumber, T1.OrderHistoryHeader_ScheduledDeliveryTime, T1.OrderHistoryHeader_EstimatedDeliveryTime, T1.OrderHistoryHeader_ActualDeliveryTime, T1.OrderHistoryHeader_DeliveryOutOfSequence, T1.OrderHistoryHeader_CreatedUtc, T1.OrderHistoryHeader_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS OrderHistoryHeader_Id, 
            T.OrderSystem AS OrderHistoryHeader_OrderSystem, 
            T.BranchId AS OrderHistoryHeader_BranchId, 
            T.CustomerNumber AS OrderHistoryHeader_CustomerNumber, 
            T.InvoiceNumber AS OrderHistoryHeader_InvoiceNumber, 
            T.DeliveryDate AS OrderHistoryHeader_DeliveryDate, 
            T.PONumber AS OrderHistoryHeader_PONumber, 
            T.ControlNumber AS OrderHistoryHeader_ControlNumber, 
            T.OriginalControlNumber AS OrderHistoryHeader_OriginalControlNumber, 
            T.OrderStatus AS OrderHistoryHeader_OrderStatus, 
            T.FutureItems AS OrderHistoryHeader_FutureItems, 
            T.ErrorStatus AS OrderHistoryHeader_ErrorStatus, 
            T.RouteNumber AS OrderHistoryHeader_RouteNumber, 
            T.StopNumber AS OrderHistoryHeader_StopNumber, 
            T.IsSpecialOrder AS OrderHistoryHeader_IsSpecialOrder, 
            T.RelatedControlNumber AS OrderHistoryHeader_RelatedControlNumber, 
            T.ScheduledDeliveryTime AS OrderHistoryHeader_ScheduledDeliveryTime, 
            T.EstimatedDeliveryTime AS OrderHistoryHeader_EstimatedDeliveryTime, 
            T.ActualDeliveryTime AS OrderHistoryHeader_ActualDeliveryTime, 
            T.DeliveryOutOfSequence AS OrderHistoryHeader_DeliveryOutOfSequence, 
            T.CreatedUtc AS OrderHistoryHeader_CreatedUtc, 
            T.ModifiedUtc AS OrderHistoryHeader_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.OrderHistoryHeader AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.PasswordResetRequest"><![CDATA[
    SELECT VALUE -- Constructing PasswordResetRequest
        [CodeFirstDatabaseSchema.PasswordResetRequest](T1.PasswordResetRequest_Id, T1.PasswordResetRequest_UserId, T1.PasswordResetRequest_Token, T1.PasswordResetRequest_Expiration, T1.PasswordResetRequest_Processed, T1.PasswordResetRequest_CreatedUtc, T1.PasswordResetRequest_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS PasswordResetRequest_Id, 
            T.UserId AS PasswordResetRequest_UserId, 
            T.Token AS PasswordResetRequest_Token, 
            T.Expiration AS PasswordResetRequest_Expiration, 
            T.Processed AS PasswordResetRequest_Processed, 
            T.CreatedUtc AS PasswordResetRequest_CreatedUtc, 
            T.ModifiedUtc AS PasswordResetRequest_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.PasswordResetRequests AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.PasswordResetRequests"><![CDATA[
    SELECT VALUE -- Constructing PasswordResetRequests
        [KeithLink.Svc.Impl.Repository.EF.Operational.PasswordResetRequest](T1.PasswordResetRequest_Id, T1.PasswordResetRequest_UserId, T1.PasswordResetRequest_Token, T1.PasswordResetRequest_Expiration, T1.PasswordResetRequest_Processed, T1.PasswordResetRequest_CreatedUtc, T1.PasswordResetRequest_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS PasswordResetRequest_Id, 
            T.UserId AS PasswordResetRequest_UserId, 
            T.Token AS PasswordResetRequest_Token, 
            T.Expiration AS PasswordResetRequest_Expiration, 
            T.Processed AS PasswordResetRequest_Processed, 
            T.CreatedUtc AS PasswordResetRequest_CreatedUtc, 
            T.ModifiedUtc AS PasswordResetRequest_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.PasswordResetRequest AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.Settings"><![CDATA[
    SELECT VALUE -- Constructing Settings
        [CodeFirstDatabaseSchema.Settings](T1.Settings_Id, T1.Settings_UserId, T1.Settings_Key, T1.Settings_Value, T1.Settings_CreatedUtc, T1.Settings_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS Settings_Id, 
            T.UserId AS Settings_UserId, 
            T.[Key] AS Settings_Key, 
            T.[Value] AS Settings_Value, 
            T.CreatedUtc AS Settings_CreatedUtc, 
            T.ModifiedUtc AS Settings_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.Settings AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.Settings"><![CDATA[
    SELECT VALUE -- Constructing Settings
        [KeithLink.Svc.Impl.Repository.EF.Operational.Settings](T1.Settings_Id, T1.Settings_UserId, T1.Settings_Key, T1.Settings_Value, T1.Settings_CreatedUtc, T1.Settings_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS Settings_Id, 
            T.UserId AS Settings_UserId, 
            T.[Key] AS Settings_Key, 
            T.[Value] AS Settings_Value, 
            T.CreatedUtc AS Settings_CreatedUtc, 
            T.ModifiedUtc AS Settings_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.Settings AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.Term"><![CDATA[
    SELECT VALUE -- Constructing Term
        [CodeFirstDatabaseSchema.Term](T1.Term_Id, T1.Term_BranchId, T1.Term_TermCode, T1.Term_Description, T1.Term_Age1, T1.Term_Age2, T1.Term_Age3, T1.Term_Age4, T1.Term_CreatedUtc, T1.Term_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS Term_Id, 
            T.BranchId AS Term_BranchId, 
            T.TermCode AS Term_TermCode, 
            T.Description AS Term_Description, 
            T.Age1 AS Term_Age1, 
            T.Age2 AS Term_Age2, 
            T.Age3 AS Term_Age3, 
            T.Age4 AS Term_Age4, 
            T.CreatedUtc AS Term_CreatedUtc, 
            T.ModifiedUtc AS Term_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.Terms AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.Terms"><![CDATA[
    SELECT VALUE -- Constructing Terms
        [KeithLink.Svc.Impl.Repository.EF.Operational.Term](T1.Term_Id, T1.Term_BranchId, T1.Term_TermCode, T1.Term_Description, T1.Term_Age1, T1.Term_Age2, T1.Term_Age3, T1.Term_Age4, T1.Term_CreatedUtc, T1.Term_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS Term_Id, 
            T.BranchId AS Term_BranchId, 
            T.TermCode AS Term_TermCode, 
            T.Description AS Term_Description, 
            T.Age1 AS Term_Age1, 
            T.Age2 AS Term_Age2, 
            T.Age3 AS Term_Age3, 
            T.Age4 AS Term_Age4, 
            T.CreatedUtc AS Term_CreatedUtc, 
            T.ModifiedUtc AS Term_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.Term AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.UserActiveCart"><![CDATA[
    SELECT VALUE -- Constructing UserActiveCart
        [CodeFirstDatabaseSchema.UserActiveCart](T1.UserActiveCart_Id, T1.UserActiveCart_UserId, T1.UserActiveCart_CartId, T1.UserActiveCart_CustomerId, T1.UserActiveCart_BranchId, T1.UserActiveCart_CreatedUtc, T1.UserActiveCart_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS UserActiveCart_Id, 
            T.UserId AS UserActiveCart_UserId, 
            T.CartId AS UserActiveCart_CartId, 
            T.CustomerId AS UserActiveCart_CustomerId, 
            T.BranchId AS UserActiveCart_BranchId, 
            T.CreatedUtc AS UserActiveCart_CreatedUtc, 
            T.ModifiedUtc AS UserActiveCart_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.UserActiveCarts AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.UserActiveCarts"><![CDATA[
    SELECT VALUE -- Constructing UserActiveCarts
        [KeithLink.Svc.Impl.Repository.EF.Operational.UserActiveCart](T1.UserActiveCart_Id, T1.UserActiveCart_UserId, T1.UserActiveCart_CartId, T1.UserActiveCart_CustomerId, T1.UserActiveCart_BranchId, T1.UserActiveCart_CreatedUtc, T1.UserActiveCart_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS UserActiveCart_Id, 
            T.UserId AS UserActiveCart_UserId, 
            T.CartId AS UserActiveCart_CartId, 
            T.CustomerId AS UserActiveCart_CustomerId, 
            T.BranchId AS UserActiveCart_BranchId, 
            T.CreatedUtc AS UserActiveCart_CreatedUtc, 
            T.ModifiedUtc AS UserActiveCart_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.UserActiveCart AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.UserMessage"><![CDATA[
    SELECT VALUE -- Constructing UserMessage
        [CodeFirstDatabaseSchema.UserMessage](T1.UserMessage_Id, T1.UserMessage_CustomerNumber, T1.UserMessage_UserId, T1.UserMessage_Label, T1.UserMessage_NotificationType, T1.UserMessage_MessageReadUtc, T1.UserMessage_Subject, T1.UserMessage_Body, T1.UserMessage_Mandatory, T1.UserMessage_CustomerName, T1.UserMessage_BranchId, T1.UserMessage_CreatedUtc, T1.UserMessage_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS UserMessage_Id, 
            T.CustomerNumber AS UserMessage_CustomerNumber, 
            T.UserId AS UserMessage_UserId, 
            T.Label AS UserMessage_Label, 
            CAST(T.NotificationType AS [Edm.Int32]) AS UserMessage_NotificationType, 
            T.MessageReadUtc AS UserMessage_MessageReadUtc, 
            T.Subject AS UserMessage_Subject, 
            T.Body AS UserMessage_Body, 
            T.Mandatory AS UserMessage_Mandatory, 
            T.CustomerName AS UserMessage_CustomerName, 
            T.BranchId AS UserMessage_BranchId, 
            T.CreatedUtc AS UserMessage_CreatedUtc, 
            T.ModifiedUtc AS UserMessage_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.UserMessages AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.UserMessages"><![CDATA[
    SELECT VALUE -- Constructing UserMessages
        [KeithLink.Svc.Impl.Repository.EF.Operational.UserMessage](T1.UserMessage_Id, T1.UserMessage_CustomerNumber, T1.UserMessage_UserId, T1.UserMessage_Label, T1.UserMessage_NotificationType, T1.UserMessage_MessageReadUtc, T1.UserMessage_Subject, T1.UserMessage_Body, T1.UserMessage_Mandatory, T1.UserMessage_CustomerName, T1.UserMessage_BranchId, T1.UserMessage_CreatedUtc, T1.UserMessage_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS UserMessage_Id, 
            T.CustomerNumber AS UserMessage_CustomerNumber, 
            T.UserId AS UserMessage_UserId, 
            T.Label AS UserMessage_Label, 
            CAST(T.NotificationType AS [KeithLink.Svc.Impl.Repository.EF.Operational.NotificationType]) AS UserMessage_NotificationType, 
            T.MessageReadUtc AS UserMessage_MessageReadUtc, 
            T.Subject AS UserMessage_Subject, 
            T.Body AS UserMessage_Body, 
            T.Mandatory AS UserMessage_Mandatory, 
            T.CustomerName AS UserMessage_CustomerName, 
            T.BranchId AS UserMessage_BranchId, 
            T.CreatedUtc AS UserMessage_CreatedUtc, 
            T.ModifiedUtc AS UserMessage_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.UserMessage AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.UserMessagingPreference"><![CDATA[
    SELECT VALUE -- Constructing UserMessagingPreference
        [CodeFirstDatabaseSchema.UserMessagingPreference](T1.UserMessagingPreference_Id, T1.UserMessagingPreference_UserId, T1.UserMessagingPreference_NotificationType, T1.UserMessagingPreference_Channel, T1.UserMessagingPreference_CustomerNumber, T1.UserMessagingPreference_BranchId, T1.UserMessagingPreference_CreatedUtc, T1.UserMessagingPreference_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS UserMessagingPreference_Id, 
            T.UserId AS UserMessagingPreference_UserId, 
            CAST(T.NotificationType AS [Edm.Int32]) AS UserMessagingPreference_NotificationType, 
            CAST(T.Channel AS [Edm.Int32]) AS UserMessagingPreference_Channel, 
            T.CustomerNumber AS UserMessagingPreference_CustomerNumber, 
            T.BranchId AS UserMessagingPreference_BranchId, 
            T.CreatedUtc AS UserMessagingPreference_CreatedUtc, 
            T.ModifiedUtc AS UserMessagingPreference_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.UserMessagingPreferences AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.UserMessagingPreferences"><![CDATA[
    SELECT VALUE -- Constructing UserMessagingPreferences
        [KeithLink.Svc.Impl.Repository.EF.Operational.UserMessagingPreference](T1.UserMessagingPreference_Id, T1.UserMessagingPreference_UserId, T1.UserMessagingPreference_NotificationType, T1.UserMessagingPreference_Channel, T1.UserMessagingPreference_CustomerNumber, T1.UserMessagingPreference_BranchId, T1.UserMessagingPreference_CreatedUtc, T1.UserMessagingPreference_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS UserMessagingPreference_Id, 
            T.UserId AS UserMessagingPreference_UserId, 
            CAST(T.NotificationType AS [KeithLink.Svc.Impl.Repository.EF.Operational.NotificationType]) AS UserMessagingPreference_NotificationType, 
            CAST(T.Channel AS [KeithLink.Svc.Impl.Repository.EF.Operational.Channel]) AS UserMessagingPreference_Channel, 
            T.CustomerNumber AS UserMessagingPreference_CustomerNumber, 
            T.BranchId AS UserMessagingPreference_BranchId, 
            T.CreatedUtc AS UserMessagingPreference_CreatedUtc, 
            T.ModifiedUtc AS UserMessagingPreference_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.UserMessagingPreference AS T
    ) AS T1]]></view>
  <view extent="CodeFirstDatabase.UserPushNotificationDevice"><![CDATA[
    SELECT VALUE -- Constructing UserPushNotificationDevice
        [CodeFirstDatabaseSchema.UserPushNotificationDevice](T1.UserPushNotificationDevice_Id, T1.UserPushNotificationDevice_UserId, T1.UserPushNotificationDevice_DeviceId, T1.UserPushNotificationDevice_ProviderToken, T1.UserPushNotificationDevice_ProviderEndpointId, T1.UserPushNotificationDevice_DeviceOS, T1.UserPushNotificationDevice_CreatedUtc, T1.UserPushNotificationDevice_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS UserPushNotificationDevice_Id, 
            T.UserId AS UserPushNotificationDevice_UserId, 
            T.DeviceId AS UserPushNotificationDevice_DeviceId, 
            T.ProviderToken AS UserPushNotificationDevice_ProviderToken, 
            T.ProviderEndpointId AS UserPushNotificationDevice_ProviderEndpointId, 
            CAST(T.DeviceOS AS [Edm.Int32]) AS UserPushNotificationDevice_DeviceOS, 
            T.CreatedUtc AS UserPushNotificationDevice_CreatedUtc, 
            T.ModifiedUtc AS UserPushNotificationDevice_ModifiedUtc, 
            True AS _from0
        FROM BEKDBContext.UserPushNotificationDevices AS T
    ) AS T1]]></view>
  <view extent="BEKDBContext.UserPushNotificationDevices"><![CDATA[
    SELECT VALUE -- Constructing UserPushNotificationDevices
        [KeithLink.Svc.Impl.Repository.EF.Operational.UserPushNotificationDevice](T1.UserPushNotificationDevice_Id, T1.UserPushNotificationDevice_UserId, T1.UserPushNotificationDevice_DeviceId, T1.UserPushNotificationDevice_ProviderToken, T1.UserPushNotificationDevice_ProviderEndpointId, T1.UserPushNotificationDevice_DeviceOS, T1.UserPushNotificationDevice_CreatedUtc, T1.UserPushNotificationDevice_ModifiedUtc)
    FROM (
        SELECT 
            T.Id AS UserPushNotificationDevice_Id, 
            T.UserId AS UserPushNotificationDevice_UserId, 
            T.DeviceId AS UserPushNotificationDevice_DeviceId, 
            T.ProviderToken AS UserPushNotificationDevice_ProviderToken, 
            T.ProviderEndpointId AS UserPushNotificationDevice_ProviderEndpointId, 
            CAST(T.DeviceOS AS [KeithLink.Svc.Impl.Repository.EF.Operational.DeviceOS]) AS UserPushNotificationDevice_DeviceOS, 
            T.CreatedUtc AS UserPushNotificationDevice_CreatedUtc, 
            T.ModifiedUtc AS UserPushNotificationDevice_ModifiedUtc, 
            True AS _from0
        FROM CodeFirstDatabase.UserPushNotificationDevice AS T
    ) AS T1]]></view>
</views>