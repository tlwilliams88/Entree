//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//	CommerceServerContrib.CodeGeneration
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------

namespace KeithLink.Svc.Impl
{
    using CommerceServer.Foundation;
    using System;

    /// <summary>
    /// A helper for using the Commerce Server Foundation.  
    /// </summary>
    public static class CommerceFoundationServiceAgent
    {
        /// <summary>
        /// Sample channel name.
        /// </summary>
        public const string Channel = "";

        /// <summary>
        /// Service agent instance.
        /// </summary>
        private static OperationServiceAgent operationServiceAgent;

        /// <summary>
        /// Executes the specified operation.
        /// </summary>
        /// <param name="operation">The operation.</param>
        /// <returns>The response instance.</returns>
        public static CommerceResponse Execute(CommerceBaseBuilder operation)
        {
            ParameterChecker.CheckForNull(operation, "operation");

            if (operationServiceAgent == null)
            {
                operationServiceAgent = new OperationServiceAgent();
            }

            return operationServiceAgent.ProcessRequest(
                GetCurrentRequestContext(), operation.ToRequest());
        }

        /// <summary>
        /// Gets the current request context.
        /// </summary>
        /// <returns>A request context instance.</returns>
        private static CommerceRequestContext GetCurrentRequestContext()
        {
            CommerceRequestContext requestContext = new CommerceRequestContext()
            {
                Channel = Channel,
                UserLocale = "en-US",
                UserUILocale = "en-US",
                RequestId = Guid.NewGuid().ToString()
            };

            return requestContext;
        }
    }
}