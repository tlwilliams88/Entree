//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KeithLink.Svc.Windows.OrderService.IS_OrderService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IS_OrderService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/OrderConfirmation", ReplyAction="http://tempuri.org/IOrderService/OrderConfirmationResponse")]
        bool OrderConfirmation(KeithLink.Svc.Core.Models.Confirmations.ConfirmationFile order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/OrderConfirmation", ReplyAction="http://tempuri.org/IOrderService/OrderConfirmationResponse")]
        System.Threading.Tasks.Task<bool> OrderConfirmationAsync(KeithLink.Svc.Core.Models.Confirmations.ConfirmationFile order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : KeithLink.Svc.Windows.OrderService.IS_OrderService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<KeithLink.Svc.Windows.OrderService.IS_OrderService.IOrderService>, KeithLink.Svc.Windows.OrderService.IS_OrderService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool OrderConfirmation(KeithLink.Svc.Core.Models.Confirmations.ConfirmationFile order) {
            return base.Channel.OrderConfirmation(order);
        }
        
        public System.Threading.Tasks.Task<bool> OrderConfirmationAsync(KeithLink.Svc.Core.Models.Confirmations.ConfirmationFile order) {
            return base.Channel.OrderConfirmationAsync(order);
        }
    }
}
