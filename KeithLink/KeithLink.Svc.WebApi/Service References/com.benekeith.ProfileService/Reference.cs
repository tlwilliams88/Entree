//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KeithLink.Svc.WebApi.com.benekeith.ProfileService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="com.benekeith.ProfileService.IProfileService")]
    public interface IProfileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/GeneratePasswordResetRequest", ReplyAction="http://tempuri.org/IProfileService/GeneratePasswordResetRequestResponse")]
        void GeneratePasswordResetRequest(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/GeneratePasswordResetRequest", ReplyAction="http://tempuri.org/IProfileService/GeneratePasswordResetRequestResponse")]
        System.Threading.Tasks.Task GeneratePasswordResetRequestAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/IsTokenValid", ReplyAction="http://tempuri.org/IProfileService/IsTokenValidResponse")]
        bool IsTokenValid(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/IsTokenValid", ReplyAction="http://tempuri.org/IProfileService/IsTokenValidResponse")]
        System.Threading.Tasks.Task<bool> IsTokenValidAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/ResetPassword", ReplyAction="http://tempuri.org/IProfileService/ResetPasswordResponse")]
        bool ResetPassword([System.ServiceModel.MessageParameterAttribute(Name="resetPassword")] KeithLink.Svc.Core.Models.Profile.ResetPasswordModel resetPassword1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/ResetPassword", ReplyAction="http://tempuri.org/IProfileService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<bool> ResetPasswordAsync(KeithLink.Svc.Core.Models.Profile.ResetPasswordModel resetPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileServiceChannel : KeithLink.Svc.WebApi.com.benekeith.ProfileService.IProfileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileServiceClient : System.ServiceModel.ClientBase<KeithLink.Svc.WebApi.com.benekeith.ProfileService.IProfileService>, KeithLink.Svc.WebApi.com.benekeith.ProfileService.IProfileService {
        
        public ProfileServiceClient() {
        }
        
        public ProfileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GeneratePasswordResetRequest(string email) {
            base.Channel.GeneratePasswordResetRequest(email);
        }
        
        public System.Threading.Tasks.Task GeneratePasswordResetRequestAsync(string email) {
            return base.Channel.GeneratePasswordResetRequestAsync(email);
        }
        
        public bool IsTokenValid(string token) {
            return base.Channel.IsTokenValid(token);
        }
        
        public System.Threading.Tasks.Task<bool> IsTokenValidAsync(string token) {
            return base.Channel.IsTokenValidAsync(token);
        }
        
        public bool ResetPassword(KeithLink.Svc.Core.Models.Profile.ResetPasswordModel resetPassword1) {
            return base.Channel.ResetPassword(resetPassword1);
        }
        
        public System.Threading.Tasks.Task<bool> ResetPasswordAsync(KeithLink.Svc.Core.Models.Profile.ResetPasswordModel resetPassword) {
            return base.Channel.ResetPasswordAsync(resetPassword);
        }
    }
}
