/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.10-master-9be3821
 */
!function(t,f,e){"use strict";function n(a,i){return{restrict:"E",transclude:!0,controller:r,controllerAs:"ctrl",bindToController:!0,scope:{mdSelectedNavItem:"=?",mdNoInkBar:"=?",navBarAriaLabel:"@?"},template:'<div class="md-nav-bar"><nav role="navigation"><ul class="_md-nav-bar-list" ng-transclude role="listbox" tabindex="0" ng-focus="ctrl.onFocus()" ng-keydown="ctrl.onKeydown($event)" aria-label="{{ctrl.navBarAriaLabel}}"></ul></nav><md-nav-ink-bar ng-hide="ctrl.mdNoInkBar"></md-nav-ink-bar></div>',link:function(t,e,n,r){i(e),r.navBarAriaLabel||a.expectAsync(e,"aria-label",f.noop)}}}function r(t,e,n,r){this._$timeout=n,this._$scope=e,this._$mdConstant=r,this.mdSelectedNavItem,this.navBarAriaLabel,this._navBarEl=t[0],this._inkbar;var a=this,i=this._$scope.$watch(function(){return a._navBarEl.querySelectorAll("._md-nav-button").length},function(t){0<t&&(a._initTabs(),i())})}function a(d,t,u,m){return{restrict:"E",require:["mdNavItem","^mdNavBar"],controller:i,bindToController:!0,controllerAs:"ctrl",replace:!0,transclude:!0,template:function(t,e){var n,r,a=e.mdNavClick,i=e.mdNavHref,o=e.mdNavSref,s=e.srefOpts;if(1<(a?1:0)+(i?1:0)+(o?1:0))throw Error("Must not specify more than one of the md-nav-click, md-nav-href, or md-nav-sref attributes per nav-item directive.");return a?n='ng-click="ctrl.mdNavClick()"':i?n='ng-href="{{ctrl.mdNavHref}}"':o&&(n='ui-sref="{{ctrl.mdNavSref}}"'),n&&(r='<md-button class="_md-nav-button md-accent" ng-class="ctrl.getNgClassMap()" ng-blur="ctrl.setFocused(false)" ng-disabled="ctrl.disabled" tabindex="-1" '+(s?'ui-sref-opts="{{ctrl.srefOpts}}" ':"")+n+'><span ng-transclude class="_md-nav-button-text"></span></md-button>'),'<li class="md-nav-item" role="option" aria-selected="{{ctrl.isSelected()}}">'+(r||"")+"</li>"},scope:{mdNavClick:"&?",mdNavHref:"@?",mdNavSref:"@?",srefOpts:"=?",name:"@"},link:function(i,o,s,c){var l;t(function(){var e=c[0],t=c[1],n=f.element(o[0].querySelector("._md-nav-button"));if(e.name||(e.name=f.element(o[0].querySelector("._md-nav-button-text")).text().trim()),n.on("click",function(){t.mdSelectedNavItem=e.name,i.$apply()}),e.disabled=u.parseAttributeBoolean(s.disabled,!1),"MutationObserver"in m){var r=o[0],a=new MutationObserver(function(t){u.nextTick(function(){e.disabled=u.parseAttributeBoolean(s[t[0].attributeName],!1)})});a.observe(r,{attributes:!0,attributeFilter:["disabled"]}),l=a.disconnect.bind(a)}else s.$observe("disabled",function(t){e.disabled=u.parseAttributeBoolean(t,!1)});d.expectWithText(o,"aria-label")}),i.$on("destroy",function(){l()})}}}function i(t){this._$element=t,this.mdNavClick,this.mdNavHref,this.mdNavSref,this.srefOpts,this.name,this._selected=!1,this._focused=!1}r.$inject=["$element","$scope","$timeout","$mdConstant"],a.$inject=["$mdAria","$$rAF","$mdUtil","$window"],i.$inject=["$element"],n.$inject=["$mdAria","$mdTheming"],f.module("material.components.navBar",["material.core"]).controller("MdNavBarController",r).directive("mdNavBar",n).controller("MdNavItemController",i).directive("mdNavItem",a),r.prototype._initTabs=function(){this._inkbar=f.element(this._navBarEl.querySelector("md-nav-ink-bar"));var n=this;this._$timeout(function(){n._updateTabs(n.mdSelectedNavItem,e)}),this._$scope.$watch("ctrl.mdSelectedNavItem",function(t,e){n._$timeout(function(){n._updateTabs(t,e)})})},r.prototype._updateTabs=function(t,e){var n=this,r=this._getTabs();if(r){var a=-1,i=-1,o=this._getTabByName(t),s=this._getTabByName(e);s&&(s.setSelected(!1),a=r.indexOf(s)),o&&(o.setSelected(!0),i=r.indexOf(o)),this._$timeout(function(){n._updateInkBarStyles(o,i,a)})}},r.prototype._updateInkBarStyles=function(t,e,n){if(this._inkbar.toggleClass("_md-left",e<n).toggleClass("_md-right",n<e),this._inkbar.css({display:e<0?"none":""}),t){var r=t.getButtonEl(),a=r.offsetLeft;this._inkbar.css({left:a+"px",width:r.offsetWidth+"px"})}},r.prototype._getTabs=function(){var t=Array.prototype.slice.call(this._navBarEl.querySelectorAll(".md-nav-item")).map(function(t){return f.element(t).controller("mdNavItem")});return t.indexOf(e)?t:null},r.prototype._getTabByName=function(e){return this._findTab(function(t){return t.getName()==e})},r.prototype._getSelectedTab=function(){return this._findTab(function(t){return t.isSelected()})},r.prototype.getFocusedTab=function(){return this._findTab(function(t){return t.hasFocus()})},r.prototype._findTab=function(t){for(var e=this._getTabs(),n=0;n<e.length;n++)if(t(e[n]))return e[n];return null},r.prototype.onFocus=function(){var t=this._getSelectedTab();t&&t.setFocused(!0)},r.prototype._moveFocus=function(t,e){t.setFocused(!1),e.setFocused(!0)},r.prototype.onKeydown=function(t){var e=this._$mdConstant.KEY_CODE,n=this._getTabs(),r=this.getFocusedTab();if(r){var a=n.indexOf(r);switch(t.keyCode){case e.UP_ARROW:case e.LEFT_ARROW:0<a&&this._moveFocus(r,n[a-1]);break;case e.DOWN_ARROW:case e.RIGHT_ARROW:a<n.length-1&&this._moveFocus(r,n[a+1]);break;case e.SPACE:case e.ENTER:this._$timeout(function(){r.getButtonEl().click()})}}},i.prototype.getNgClassMap=function(){return{"md-active":this._selected,"md-primary":this._selected,"md-unselected":!this._selected,"md-focused":this._focused}},i.prototype.getName=function(){return this.name},i.prototype.getButtonEl=function(){return this._$element[0].querySelector("._md-nav-button")},i.prototype.setSelected=function(t){this._selected=t},i.prototype.isSelected=function(){return this._selected},i.prototype.setFocused=function(t){(this._focused=t)&&this.getButtonEl().focus()},i.prototype.hasFocus=function(){return this._focused}}(window,window.angular);