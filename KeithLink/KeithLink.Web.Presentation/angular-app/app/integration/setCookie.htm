<html>

<head>
    <meta http-equiv=Content-Type content="text/html; charset=windows-1252">
    <title>KBit Authentication</title>
</head>

<body>

<h3>Redirecting to KBit...</h3>

<script language="JavaScript">

var base64 = {};
base64.PADCHAR = '=';
base64.ALPHA = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

base64.makeDOMException = function() {
    // sadly in FF,Safari,Chrome you can't make a DOMException
  var e, tmp;

  try {
    return new DOMException(DOMException.INVALID_CHARACTER_ERR);
  } catch (tmp) {
    // not available, just passback a duck-typed equiv
    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Error
    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Error/prototype
    var ex = new Error("DOM Exception 5");

    // ex.number and ex.description is IE-specific.
    ex.code = ex.number = 5;
    ex.name = ex.description = "INVALID_CHARACTER_ERR";

    // Safari/Chrome output format
    ex.toString = function() { return 'Error: ' + ex.name + ': ' + ex.message; };
    return ex;
  }
}

base64.getbyte64 = function(s,i) {
  // This is oddly fast, except on Chrome/V8.
  //  Minimal or no improvement in performance by using a
  //   object with properties mapping chars to value (eg. 'A': 0)
  var idx = base64.ALPHA.indexOf(s.charAt(i));
  if (idx === -1) {
    throw base64.makeDOMException();
  }
  return idx;
}

base64.decode = function(s) {
  // convert to string
  s = '' + s;
  var getbyte64 = base64.getbyte64;
  var pads, i, b10;
  var imax = s.length
  if (imax === 0) {
    return s;
  }

  if (imax % 4 !== 0) {
    throw base64.makeDOMException();
  }

  pads = 0
  if (s.charAt(imax - 1) === base64.PADCHAR) {
    pads = 1;
    if (s.charAt(imax - 2) === base64.PADCHAR) {
      pads = 2;
    }
    // either way, we want to ignore this last block
    imax -= 4;
  }

  var x = [];
  for (i = 0; i < imax; i += 4) {
    b10 = (getbyte64(s,i) << 18) | (getbyte64(s,i+1) << 12) |
      (getbyte64(s,i+2) << 6) | getbyte64(s,i+3);
    x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 0xff, b10 & 0xff));
  }

  switch (pads) {
  case 1:
    b10 = (getbyte64(s,i) << 18) | (getbyte64(s,i+1) << 12) | (getbyte64(s,i+2) << 6);
    x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 0xff));
    break;
  case 2:
    b10 = (getbyte64(s,i) << 18) | (getbyte64(s,i+1) << 12);
    x.push(String.fromCharCode(b10 >> 16));
    break;
  }
  return x.join('');
}

function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}
function setCookie(cookieName,cookieValue) {
 document.cookie = cookieName+"="+escape(cookieValue);
}

function addLeadingZeros(num) {
	if (num < 10) {
		num = '0' + num;
	}
	return num
}
// subtract 1 day and convert today's date to same format as the passed in timestamp
function getFormatedDate() {
	var now = new Date();
	now.setDate(now.getDate() - 1); // subtract one day for comparison
	var month = (now.getMonth()+1),
		day = now.getDate(),
		year = now.getFullYear(),
		hours = now.getHours(),
		minutes = now.getMinutes(),
		seconds = now.getSeconds();

	month = addLeadingZeros(month);
	day = addLeadingZeros(day);
	hours = addLeadingZeros(hours);
	minutes = addLeadingZeros(minutes);
	seconds = addLeadingZeros(seconds);

	return parseInt(year + '' + month + '' + day + '' + hours + '' + minutes + '' + seconds, 10);
}

(function() {
   var characterSeparator = '-';

   var encodedUsernameAndTimestamp = getParameterByName('username');
   var decodedUsernameAndTimestamp = base64.decode(encodedUsernameAndTimestamp); // decode base64 string
   // console.log(decodedUsernameAndTimestamp);

   // separate username and timestamp
   var username = decodedUsernameAndTimestamp.substr(0, decodedUsernameAndTimestamp.indexOf(characterSeparator)),
   	  timestamp = decodedUsernameAndTimestamp.substr(decodedUsernameAndTimestamp.indexOf(characterSeparator) + 1);

   // check timestamp
   var yesterday = getFormatedDate();
   // console.log('yesterday: ' + yesterday);
   // console.log('timestamp: ' + timestamp);

   // valid if timestamp is more recent than yesterday
   if (yesterday < parseInt(timestamp, 10)) {
   	 // console.log('redirecting');
   	 setCookie('TRUSTED_SIGNON_USER', username);
     parent.location='index.html';
   }

})();

</script>

</body>

</html>
