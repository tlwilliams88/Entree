<#@ template debug="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(ProjectDir)$(OutDir)CommerceServerContrib.CodeGeneration.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Runtime.Remoting.Messaging" #>
<#@ import namespace="CommerceServerContrib.CodeGeneration" #>
<#@ parameter type="CommerceServerContrib.CodeGeneration.ClassDefinition" name="classDefinition"  #>
<#
/*
(c) 2012 CommerceServer.net, Inc. and its affiliates. All rights reserved.
*/
#>
/// <summary>
/// A representation of the <#=  classDefinition.Name #> CommerceEntity in the Metadata system.
/// </summary>
[GeneratedCode("CommerceServerContrib.CodeGeneration", "1.0.0.0")]
[DebuggerNonUserCode]
public partial class <#=  classDefinition.Name #> : ICommerceEntity
{
	private string modelName = "<#= classDefinition.WeaklyTypedName #>";
	
	private CommerceEntity _commerceEntity;

	/// <summary>
	/// Get or sets the model name for the profile
	/// </summary>
	public string ModelName
	{ 
		get
		{
			return modelName;
		}

		set
		{
			modelName = value;
		}
	}

	#region Constructors 
	/// <summary>
    /// Initializes a new instance of the <see cref="<#= classDefinition.Name#>"/> class.
    /// </summary>
	public <#= classDefinition.Name#>()
    {
		this._commerceEntity = new CommerceEntity(ModelName);
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="<#= classDefinition.Name#>"/> class.
    /// </summary>
    /// <param name="entity">An existing CommerceEntity to create a new instance of this class from.</param>
	public <#= classDefinition.Name#>(CommerceEntity entity)
	{
		this._commerceEntity = entity;
	}
	#endregion
<#
if(classDefinition.Properties != null && classDefinition.Properties.Count >0)
{
#>
	#region Entity Properties
<#
foreach(var property in classDefinition.Properties)
{
	if(property.WeaklyTypedName != "Id" && property.WeaklyTypedName != "DateModified" && property.WeaklyTypedName != "DateCreated" && property.WeaklyTypedName != "ModifiedBy")
	{
#>
	/// <summary>
    /// Gets or sets the <#=property.Name #> property.
    /// </summary>
    /// <value>
    /// The <#=property.Name #> property from the property collection.
    /// </value>
	public virtual <#= property.RuntimeType#> <#= property.Name#>
	{
		get
		{
			return this._commerceEntity.GetPropertyValue(PropertyName.<#= property.Name#>) as <#= property.RuntimeType#>;
		}

		set
		{
			this._commerceEntity.SetPropertyValue(PropertyName.<#= property.Name#>, value);
		}
	}

<#
	}
}
#>
	#endregion
<#
}
if(classDefinition.Properties != null && classDefinition.Properties.Count >0)
{
#>
	#region Property Name Projection
	/// <summary>
    /// Property name constants.
    /// </summary>
	[DebuggerNonUserCode]
	[GeneratedCode("CommerceServerContrib.CodeGeneration", "1.0.0.0")] 
	public class PropertyName : CommerceEntity.PropertyName 
	{
<#
foreach(var property in classDefinition.Properties)
{
	if(property.WeaklyTypedName != "Id" && property.WeaklyTypedName != "DateModified" && property.WeaklyTypedName != "DateCreated" && property.WeaklyTypedName != "ModifiedBy" && property.WeaklyTypedName != "ParentId")
	{
#>
		/// <summary>
        /// Constant for accessing <#= property.WeaklyTypedName #> property.
        /// </summary>
		public const string <#= property.Name #> = "<#= property.WeaklyTypedName #>";

<#
	}
}
#>
	}
#endregion
<#
}

if(classDefinition.Relationships != null && classDefinition.Relationships.Count > 0) 
{
#>

	#region Relationship Name Projection
	/// <summary>
    /// Relationship name constants. 
    /// </summary>
	public static class RelationshipName 
	{
<#
	foreach(var relationship in classDefinition.Relationships)
	{	
#>
		/// <summary>
        /// Constant for accessing the <#=relationship.Name #> relationship.
        /// </summary>
		public const string <#=relationship.Name #> = "<#=relationship.Name #>";
<#
	}
#>
	}
	#endregion

	#region Relationships
<#
foreach(var relationship in classDefinition.Relationships)
{	
	var returnType = relationship.IsMultipleValued ? "List<" + relationship.AssociatedEntity + ">" : relationship.AssociatedEntity;
#>
	/// <summary>
    /// <#= relationship.Name #> Relationship.
    /// </summary>
	public <#= returnType #> <#= relationship.Name #>
	{
		get
		{
			var relationship = this._commerceEntity.GetPropertyValue(RelationshipName.<#= relationship.Name #>) as CommerceRelationship<#= relationship.IsMultipleValued ? "List" : string.Empty #>;
				
			if(relationship == null)
			{
				return null;
			}
	
<#
	if(relationship.IsMultipleValued)
	{
#>
			return new List<<#= relationship.AssociatedEntity #>>(relationship.Select(c=> (<#= relationship.AssociatedEntity #>)c.Target));
<#
	}else{
#>
			return (<#= relationship.AssociatedEntity #>)relationship.Target;
<#
	}
#>
		}
	}

<#
if(relationship.IsMultipleValued)
	{
#>
	/// <summary>
    /// <#= relationship.Name #> Total Item Count.
    /// </summary>
	public int? <#= relationship.Name #>TotalItemCount
    {
		get
        {
			var relationship = this._commerceEntity.GetPropertyValue(RelationshipName.<#= relationship.Name #>) as CommerceRelationshipList;

            if (relationship == null)
            {
				return null;
            }

            return relationship.TotalItemCount;
		}
    }

	/// <summary>
    /// <#= relationship.Name #> First Item Index.
    /// </summary>
    public int <#= relationship.Name #>FirstItemIndex
    {
		get
        {
			var relationship = this._commerceEntity.GetPropertyValue(RelationshipName.<#= relationship.Name #>) as CommerceRelationshipList;

            if (relationship == null)
            {
				return 0;
            }

            return relationship.FirstItemIndex;
		}
	}
<#
	}
}#>
	#endregion<#}#>	

	#region CommerceEntity Properties
	/// <summary>
    /// Get or sets the Id Property.
    /// </summary>
	public string Id
    {
		get { return this._commerceEntity.GetPropertyValue(CommerceEntity.PropertyName.Id) as string; }
        set { this._commerceEntity.SetPropertyValue(CommerceEntity.PropertyName.Id, value); }
	}

	/// <summary>
    /// Get or sets the Commerce Entity Property Collection.
    /// </summary>
	public CommercePropertyCollection Properties
    {
		get
        {
			return this._commerceEntity.Properties;
        }

        set
        {
			this._commerceEntity.Properties = value;
        }
	}

	/// <summary>
    /// Method to return the inner CommerceEntity.
    /// </summary>
    /// <returns>CommerceEntity representation.</returns>
	public CommerceEntity ToCommerceEntity()
    {
		return this._commerceEntity;
    }
	#endregion

	/// <summary>
    /// Explict operator to convert a CommerceEntity to the strongly typed <#= classDefinition.Name#>
    /// </summary>
    /// <param name="entity">Base CommerceEntity</param>
    /// <returns>Strongly typed <#= classDefinition.Name#></returns>
	public static explicit operator <#=classDefinition.Name#>(CommerceEntity entity)
	{
		return new  <#=classDefinition.Name#>(entity);
	}
}

